apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    service: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      service: frontend
  template:
    metadata:
      labels:
        service: frontend
    spec:
      containers:
        - name: frontend
          image: be4rz58/udagram-frontend:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          # resources:
          #   limits:
          #     memory: "1024Mi"
          #     cpu: "500m"
          #   requests:
          #     memory: "64Mi"
          #     cpu: "250m"
          env:
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: POSTGRES_HOST
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: POSTGRES_DB
          - name: AWS_BUCKET
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_BUCKET
          - name: AWS_REGION
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_REGION
          - name: AWS_PROFILE
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_PROFILE
          - name: JWT_SECRET
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: JWT_SECRET
          - name: URL
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: URL
          - name: POSTGRES_USERNAME
            valueFrom:
              configMapKeyRef:
                name: postgres-secret
                key: POSTGRES_USERNAME
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD      
          volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true  
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret
